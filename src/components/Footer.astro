---
export interface LinkItem {
  link: string;
  text: string;
  newtab?: boolean;
}

interface Props {
  links: LinkItem[];
}

const { links } = Astro.props;
---

<style>
  :root {
    --drawer-width: 280px;
    --duration: 220ms;
    --easing: cubic-bezier(.2,.8,.2,1);
  }

  a {
    margin: 0 1rem;
    transition: all 0.2s;

    /* Mobile styles */
    @media (max-width: 768px) {
      margin: 0.5rem 0;
    }
  }

  a:hover {
    transform: translateY(-10px) scale(1.1);
    color: var(--fg);
  }

  /* Hamburger button */
  .hamburger {
    position: fixed;
    top: 0.5rem;
    left: 0.5rem;
    z-index: 50;
    border: none;
    background: transparent;
    padding: 0;
    cursor: pointer;
    width: 32px;
    height: 32px;
    display: grid;
    place-items: center;
  }

  .hamburger span {
    display: block;
    width: 22px;
    height: 2px;
    background: currentColor;
    position: relative;
  }
  .hamburger span::before,
  .hamburger span::after {
    content: "";
    position: absolute;
    left: 0;
    width: 22px;
    height: 2px;
    background: currentColor;
  }
  .hamburger span::before { top: -6px; }
  .hamburger span::after  { top:  6px; }

  /* Drawer */
  .drawer {
    position: fixed;
    inset: 0 auto 0 0;
    width: min(100vw, var(--drawer-width));
    background: var(--bg);
    box-shadow: 0 10px 30px rgba(0,0,0,.2);
    transform: translateX(-100%);
    transition: transform var(--duration) var(--easing);
    padding: 1rem;
    padding-top: 3rem;
    display: flex;
    flex-direction: column;
    z-index: 40;
  }
  .drawer.open {
    transform: translateX(0);
  }

  .home-link {
    color: #0051ba;
  }

  /* Large screens: fixed at bottom */
  @media (min-width: 768px) {
    .hamburger {
      display: none;
    }
    .drawer {
      width: 100%;
      height: auto;
      bottom: 0;
      left: 0;
      right: 0;
      top: auto;
      transform: none;
      flex-direction: row; /* optional: row layout on desktop */
      justify-content: center;
      box-shadow: 0 -4px 20px rgba(0,0,0,.1);
      padding-top: 1rem;
    }

    .home-link {
      display: none;
    }
  }
</style>

<button
  id="hamburger"
  class="hamburger"
  aria-label="Open menu"
  aria-controls="mobile-drawer"
  aria-expanded="false"
>
  <span aria-hidden="true"></span>
</button>

<aside id="mobile-drawer" class="drawer" role="dialog" aria-modal="true">
  <a href="/" class="home-link">home</a>
  {links.map(l => (
  <a 
    target={l.newtab ? '_blank' : ''}
    rel={l.newtab ? 'noopener noreferrer' : ''} 
    href={l.link}
  >
    {l.text}
  </a>
  ))}
</aside>

<script>
  const btn = document.getElementById('hamburger')!;
  const drawer = document.getElementById('mobile-drawer')!;

  function toggleDrawer() {
    const isOpen = drawer.classList.contains('open');
    if (isOpen) {
      drawer.classList.remove('open');
      btn.setAttribute('aria-expanded', 'false');
    } else {
      drawer.classList.add('open');
      btn.setAttribute('aria-expanded', 'true');
    }
  }

  btn.addEventListener('click', toggleDrawer);
</script>

<style>
</style>
